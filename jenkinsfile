pipeline{
 agent any 
 
options {
  buildDiscarder logRotator( artifactNumToKeepStr: '4', numToKeepStr: '4')
}
 parameters{
    
        
        choice(choices: ['nav2', 'traffic_report', 'nmp', 'nmm', 'tft2', 'all'], description: 'What is the project?', name: 'project')
        choice(choices: ['status', 'start', 'stop'], description: 'choose ?', name: 'TOMCAT_STATE')
        choice(choices: ['lab', 'int', 'rec', 'pre', 'prd', 'all'], description: 'What is the environment?', name: 'environment')
        booleanParam(defaultValue: true, description: 'launch the playbook in dry-run mode', name: 'isCheck')
        choice(choices: ['', '-v', '-vv', '-vvv'], description: 'verbosity', name: 'verbosity')
        text(name: 'ssh_keys_add', description: 'Add users ssh keys in the following format:\nname: Raf, state: present, key_pub: \"ssh-rsa AAAAB3NzaC***XJFKQ== benmansour_rafik@yahoo.fr\"',defaultValue:"")
        text(name: 'ssh_keys_remove', description: 'Remove ssh keys by specifying the name of the user in the following format:\nRaf',defaultValue:"")
    
 }
 stages{
   stage('clone source code'){
       
     steps{
       
         git branch: 'feature/dev_ama', credentialsId: 'am', url: 'https://github.com/amalonga/dockercomposetest-pipeline.git'
     }

       
  } 
    
        
        stage('liste des noeuds'){
               
            when{
            
              expression{
                env.TOMCAT_STATE == "status"
              }
            
        }       
            steps{
                echo "${env.TOMCAT_STATE}"                
                sh'''
                sh 'ssh -i ~jenkins/.ssh/id_rsa  amalonga@192.168.1.75 docker  node ls' 
                 
                
                '''
            }
            
        }
        stage('start tomcat'){
            
            when{
                expression{
                    env.TOMCAT_STATE == "start"
                }
            }
            steps{
                echo "env.TOMCAT_STATE : ${env.TOMCAT_STATE}"
                
                sh 'ssh -i ~jenkins/.ssh/id_rsa  amalonga@192.168.1.75 docker  node ls' 
            }
            
        }
        stage("stop tomcat"){
            when{
                expression{
                    
                    env.TOMCAT_STATE == "stop"
                }
                
            }
            steps{
                
                echo "env.TOMCAT_STATE: ${env.TOMCAT_STATE}"
                sh 'ssh -i ~jenkins/.ssh/id_rsa  amalonga@192.168.1.75 docker  node ls' 
                
            }
        }
        
         
 }
 
 post {
        cleanup {
            /* clean up our workspace */
            dir("*") {
                deleteDir()
            }
            
           
        }
    }

}
